name: Local network IP
on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

concurrency:
  group: client_server
  cancel-in-progress: true

jobs:
  traceroute:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install traceroute
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends inetutils-traceroute inetutils-ping
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Trace route
      run: |
        traceroute -m 3 -w 1 --tries 1 8.8.8.8
    - name: Wait for server config
      run: |
        while ! gh run download ${GITHUB_RUN_ID} -n server_config -D server_config; do
          sleep 1
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Traceroute to server
      run: |
        traceroute -m 3 -w 1 --tries $(cat server_config/ip.txt)

  client:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Print local IP
      run: |
        IP=$(ip a | awk '/inet 10/ { split($2, amask, /\//); print amask[1] }')
        echo "Local IP: $IP"
        echo
        ip a
    - name: Wait for server config
      run: |
        while ! gh run download ${GITHUB_RUN_ID} -n server_config -D server_config; do
          sleep 1
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Connect to server
      run: |
        URL=http://$(cat server_config/ip.txt):8080/test.html
        echo "URL: $URL"
        i=0
        until curl -sSf --connect-timeout 2 $URL >/dev/null; do
          sleep 0.2

          i=$((i+1))
          if [ $i -gt 10 ]; then
            echo "Failed to connect to server"
            exit 1
          fi
        done
        curl $URL

  server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Determine local IP
      run: |
        IP=$(ip a | awk '/inet 10/ { split($2, amask, /\//); print amask[1] }')
        echo "IP: $IP"
        mkdir -p server_config
        echo $IP > server_config/ip.txt
    - name: Upload server config
      uses: actions/upload-artifact@v4
      with:
        name: server_config
        path: server_config
    - name: Start server
      run: |
        echo
        echo "Current interfaces:"
        ip a
        echo

        npx -y http-server .
